@model Angular.Models.LoginModel
@{
    ViewBag.Title = "About";
}
<script>
        var app = angular.module('myApp', []);
        debugger;
     app.controller('customersCtrl', function ($scope, $http) {
        debugger;
        $scope.userId = '';
        //http://localhost:50124/Home/GetMessages
        @*$http.get("@Url.Action("GetMessages","Home")")
                     .then(function (response) {
                         debugger;
                         $scope.names = response.data
                     })*@
        //myFunction
        $scope.fnSend = function () {
            debugger;
            $http({
                method: "GET",
                url: "@Url.Action("Contact","Home")",
                params: { UserId: $("#UserId").val(), Message: $scope.msg },
            }).then(function mySucces(response) {
                debugger;
                $scope.msg = "";

                $http.get("@Url.Action("GetMessages","Home")")
                .then(function (response) {
                    debugger;
                    $scope.names = response.data
                })
            }, function myError(response) {
                alert('ERROR');
            });
        }
        //refresh function
        window.setInterval(function () {
            $http.get("@Url.Action("GetMessages","Home")")
            .then(function (response) {

                $scope.names = response.data
                $("#tbl").scrollTop($("#tbl")[0].scrollHeight);
            })
        }, 1000);
        //enter function
        $scope.fnEnter = function (keyEvent) {
            if (keyEvent.which === 13)
            {
                $scope.fnSend();
            }
        }
         @*$scope.uploadFile = function () {
            debugger;
            var file = $scope.myFile;
            var uploadUrl = "@Url.Action("imageUpload", "Home")";
            fileUpload.uploadFileToUrl(file, uploadUrl);
        };*@
        
    });
</script>
<div class="chat">
    <div ng-app="myApp" ng-controller="customersCtrl">
        <input type="hidden" ng-model="userId" id="UserId" value="@Model.Id" />
        <div id="tbl" style="border: 1px solid black;background-color:rgba(0,0,0,0.20); height: 446px; width: 859px; overflow-y: scroll; ">
            <ul ng-repeat="x in names">
                <b style="color:whitesmoke"> {{ x.UserName}}</b>  :
                <span style="color:white">{{ x.ResponseMessage}}</span>
            </ul>
        </div>
        @*<section style="float: right; margin: -544px -486px 0 0; " id="app" hidden>
            <video style="height: 400px; width: 279px;" id="monitor" autoplay></video> <canvas id="photo"></canvas>

        </section>*@
        <button class="k-button" ng-click="fnSend()">Send</button>
        <input type="text" ng-keypress="fnEnter($event)" ng-model="msg" id="msg" style="width:811px" class="k-textbox" />

        @*<input type="file" file-model="myFile" />
            <button ng-click="uploadFile()">upload me</button>*@

        @*<md-input-container>
            <label>Enter date</label>
            <md-datepicker ng-model=""></md-datepicker>
        </md-input-container>*@

    </div>
</div>

@*<script type='text/javascript'>
    window._cf = {}; window._cf.id = '279007'; (function () { var cf = document.createElement('script'); cf.type = 'text/javascript'; cf.async = true; cf.src = 'http://cf-cdn.s3.amazonaws.com/js/livechess.min.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(cf, s); })();
</script>*@

@*upload image*@
    @*<script>*@
         @*//var myApp = angular.module('myApp', []);

         //app.directive('fileModel', ['$parse', function ($parse) {
         //   return {
         //      restrict: 'A',
         //      link: function(scope, element, attrs) {
         //         var model = $parse(attrs.fileModel);
         //         var modelSetter = model.assign;

         //         element.bind('change', function(){
         //            scope.$apply(function(){
         //               modelSetter(scope, element[0].files[0]);
         //            });
         //         });
         //      }
         //   };
         //}]);

         //app.service('fileUpload', ['$http', function ($http) {
         //    this.uploadFileToUrl = function (file, uploadUrl) {
         //        debugger
         //      var fd = new FormData();
         //      fd.append('file', file);

         //      $http.post(uploadUrl, fd, {
         //         transformRequest: angular.identity,
         //         headers: {'Content-Type': undefined}
         //      })

         //      .success(function(){
         //      })

         //      .error(function(){
         //      });
         //   }
         //}]);

         //app.controller('customersCtrl', ['$scope', 'fileUpload', function ($scope, fileUpload) {*@
             @*$scope.uploadFile = function () {
                 debugger;
               var file = $scope.myFile;
               var uploadUrl = "@Url.Action("imageUpload", "Home")";
               fileUpload.uploadFileToUrl(file, uploadUrl);
            };*@
        @*// }]);*@

    @*</script>
    <script type="text/javascript">*@
  @*//  navigator.webkitGetUserMedia(
  //{ "video": true, "audio": true },
  //function (s) {
  //    document.querySelector('video').src =
  //      window.webkitURL.createObjectURL(s);
  //},
    //function (e) { console.log(e); }
    //);


    //navigator.webkitGetUserMedia({audio: true, video: true}, successCallback, errorCallback);
    //navigator.webkitGetUserMedia("video,audio", successCallback, errorCallback);
    //function successCallback(stream) {
    //    sourcevid.src = window.webkitURL.createObjectURL(stream);
    //    sourcevid.style.webkitTransform = "rotateY(180deg)";
    //    localStream = stream;
    //}

    //function errorCallback(error) {
    //    logg('An error occurred: [CODE ' + error.code + ']');
    //}
    //var remotevid = document.getElementById('remotevid');

    //try {
    //    logg("Creating peer connection");
    //    var servers = [];
    //    servers.push({ 'url': 'stun:' + stunServer });
    //    var pc_config = { 'iceServers': servers };
    //    peerConn = new webkitRTCPeerConnection(pc_config);
    //    peerConn.onicecandidate = onIceCandidate;
    //}

    //catch (e) {
    //    logg("Failed to create PeerConnection, exception: " + e.message);
    //}

    //peerConn.onaddstream = onRemoteStreamAdded;
    //peerConn.onremovestream = onRemoteStreamRemoved;

    //function onRemoteStreamAdded(event) {
    //    logg("Added remote stream");
    //*@    @*remotevid.src = window.webkitURL.createObjectURL(event.stream);
    //}*@
    @*</script>*@
